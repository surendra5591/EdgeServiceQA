<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-15T13:46:57 IST" name="Default suite" finished-at="2021-03-15T14:39:31 IST" duration-ms="3153471">
    <groups>
    </groups>
    <test started-at="2021-03-15T13:46:57 IST" name="Default test" finished-at="2021-03-15T14:39:31 IST" duration-ms="3153471">
      <class name="EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:46:57 IST" name="beforeSuite" finished-at="2021-03-15T13:46:57 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:46:57 IST" name="beforeClass" finished-at="2021-03-15T13:47:02 IST" duration-ms="4168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:47:02 IST" name="beforeMethod" finished-at="2021-03-15T13:47:02 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.GetIOTDataRespectiveGatewayID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="GetIOTDataRespectiveGatewayID()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:47:02 IST" name="GetIOTDataRespectiveGatewayID" finished-at="2021-03-15T13:49:11 IST" duration-ms="129223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetIOTDataRespectiveGatewayID -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:49:11 IST" name="tearDown" finished-at="2021-03-15T13:49:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetIOTDataRespectiveGatewayID status=SUCCESS method=E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.GetIOTDataRespectiveGatewayID()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:49:11 IST" name="beforeMethod" finished-at="2021-03-15T13:49:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.ProjectCreation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ProjectCreation()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T13:49:11 IST" name="ProjectCreation" finished-at="2021-03-15T14:16:18 IST" depends-on-methods="EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.GetIOTDataRespectiveGatewayID" duration-ms="1627295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProjectCreation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:16:18 IST" name="tearDown" finished-at="2021-03-15T14:16:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ProjectCreation status=SUCCESS method=E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.ProjectCreation()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:16:18 IST" name="beforeMethod" finished-at="2021-03-15T14:16:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.ProjectPublishandDeploymentConfig()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ProjectPublishandDeploymentConfig()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:16:18 IST" name="ProjectPublishandDeploymentConfig" finished-at="2021-03-15T14:22:23 IST" depends-on-methods="EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.ProjectCreation" duration-ms="365085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProjectPublishandDeploymentConfig -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:22:23 IST" name="tearDown" finished-at="2021-03-15T14:22:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ProjectPublishandDeploymentConfig status=SUCCESS method=E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.ProjectPublishandDeploymentConfig()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:22:23 IST" name="beforeMethod" finished-at="2021-03-15T14:22:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.SensorProfilevalidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="SensorProfilevalidation()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:22:23 IST" name="SensorProfilevalidation" finished-at="2021-03-15T14:39:26 IST" depends-on-methods="EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.ProjectPublishandDeploymentConfig" duration-ms="1022783" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot find elements when the XPath is null.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot find elements when the XPath is null.
at org.openqa.selenium.By$ByXPath.<init>(By.java:339)
at org.openqa.selenium.By.xpath(By.java:92)
at UtilityComponent.FunctionalComponents.scrollToExact(FunctionalComponents.java:357)
at EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.SensorProfilevalidation(E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.java:1821)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SensorProfilevalidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:39:26 IST" name="tearDown" finished-at="2021-03-15T14:39:26 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SensorProfilevalidation status=FAILURE method=E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation.SensorProfilevalidation()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:39:26 IST" name="AfterClass" finished-at="2021-03-15T14:39:31 IST" duration-ms="4535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation@25a6944c]" started-at="2021-03-15T14:39:31 IST" name="AfterSuite" finished-at="2021-03-15T14:39:32 IST" duration-ms="1364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- EdgeServices.E2E_Cockpit_EdgeProject_StreamingConfigDeploy_StreamingEdgeConsolevalidation -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
