<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="INLN56593756A" ignored="32" name="Regression" tests="17" failures="1" timestamp="06 May 2020 15:43:54 GMT" time="13.647" errors="0">
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=81.0.4044.129)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;INLN56593756A&amp;apos;, ip: &amp;apos;192.168.43.179&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_231&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.129, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\c5282967\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:61602}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 1d815acb890af9bdf205aa1c5216381f">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=81.0.4044.129)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'INLN56593756A', ip: '192.168.43.179', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.129, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\c5282967\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:61602}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 1d815acb890af9bdf205aa1c5216381f
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
	at UtilityComponent.FunctionalComponents.getScreenshot(FunctionalComponents.java:87)
	at BaseComponent.BaseTest.tearDown(BaseTest.java:78)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="BaseComponent.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="TC_CreateSensorProfilewith_ActiontypeFieldmessageand_RuletypeValuemonitoring_Flow" time="8.212" classname="StreamingEdgeConsole.Test_CreateSensorProfilewithActiontypeFieldmessageandRuletypeValuemonitoring">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=81.0.4044.129)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;INLN56593756A&amp;apos;, ip: &amp;apos;192.168.43.179&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_231&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.129, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\c5282967\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:61602}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 1d815acb890af9bdf205aa1c5216381f
*** Element info: {Using=xpath, value=//input[@class=&amp;apos;sapMInputBaseInner&amp;apos; and @type=&amp;apos;password&amp;apos;]}">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=81.0.4044.129)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'INLN56593756A', ip: '192.168.43.179', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.129, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\c5282967\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:61602}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 1d815acb890af9bdf205aa1c5216381f
*** Element info: {Using=xpath, value=//input[@class='sapMInputBaseInner' and @type='password']}
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementsByXPath(RemoteWebDriver.java:432)
	at org.openqa.selenium.By$ByXPath.findElements(By.java:348)
	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:311)
	at UtilityComponent.FunctionalComponents.IsElementPresent(FunctionalComponents.java:394)
	at UtilityComponent.FunctionalComponents.ClickAndSetValue(FunctionalComponents.java:432)
	at StreamingEdgeConsole.Test_CreateSensorProfilewithActiontypeFieldmessageandRuletypeValuemonitoring.TC_CreateSensorProfilewith_ActiontypeFieldmessageand_RuletypeValuemonitoring_Flow(Test_CreateSensorProfilewithActiontypeFieldmessageandRuletypeValuemonitoring.java:39)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- TC_CreateSensorProfilewith_ActiontypeFieldmessageand_RuletypeValuemonitoring_Flow -->
  <testcase name="TC_Test_Valuemonitoring_deviceid" time="0.002" classname="StreamingEdgeConsole.Test_Valuemonitoring_deviceid">
    <skipped/>
  </testcase> <!-- TC_Test_Valuemonitoring_deviceid -->
  <testcase name="TC_Test_VM_equality_deviceid" time="0.001" classname="StreamingEdgeConsole.Test_VM_equality_deviceid">
    <skipped/>
  </testcase> <!-- TC_Test_VM_equality_deviceid -->
  <testcase name="TC_Test_VM_equality_Tolerance_DeviceID" time="0.003" classname="StreamingEdgeConsole.Test_VM_equality_Tolerance_DeviceID">
    <skipped/>
  </testcase> <!-- TC_Test_VM_equality_Tolerance_DeviceID -->
  <testcase name="TC_Test_VM_equality_Tolerance" time="0.004" classname="StreamingEdgeConsole.Test_VM_equality_Tolerance">
    <skipped/>
  </testcase> <!-- TC_Test_VM_equality_Tolerance -->
  <testcase name="TC_Test_VM_equality" time="0.003" classname="StreamingEdgeConsole.Test_VM_equality">
    <skipped/>
  </testcase> <!-- TC_Test_VM_equality -->
  <testcase name="TC_Test_VM_smallerthan_Deviceid" time="0.001" classname="StreamingEdgeConsole.Test_VM_Smallerthan_Deviceid">
    <skipped/>
  </testcase> <!-- TC_Test_VM_smallerthan_Deviceid -->
  <testcase name="TC_Test_VM_smallerthan" time="0.001" classname="StreamingEdgeConsole.Test_VM_smallerthan">
    <skipped/>
  </testcase> <!-- TC_Test_VM_smallerthan -->
  <testcase name="TC_Test_VM_Tiered_Critical_DeviceID_Flow" time="0.001" classname="StreamingEdgeConsole.Test_VM_Tiered_Critical_DeviceID_Flow">
    <skipped/>
  </testcase> <!-- TC_Test_VM_Tiered_Critical_DeviceID_Flow -->
  <testcase name="TC_Test_VM_Tiered_Critical_SensorTag_Flow" time="0.001" classname="StreamingEdgeConsole.Test_VM_Tiered_Critical_SensorTag">
    <skipped/>
  </testcase> <!-- TC_Test_VM_Tiered_Critical_SensorTag_Flow -->
  <testcase name="TC_Test_VM_tiered_Critical" time="0.002" classname="StreamingEdgeConsole.Test_VM_tiered_Critical">
    <skipped/>
  </testcase> <!-- TC_Test_VM_tiered_Critical -->
  <testcase name="TC_Test_VM_tiered_warning_Flow" time="0.001" classname="StreamingEdgeConsole.Test_VM_tiered_warning">
    <skipped/>
  </testcase> <!-- TC_Test_VM_tiered_warning_Flow -->
  <testcase name="TC_TestVMtwoSensors_SmallerThanGreaterThan_Flow" time="0.03" classname="StreamingEdgeConsole.Test_VMtwoSensors_SmallerThanGreaterThan">
    <skipped/>
  </testcase> <!-- TC_TestVMtwoSensors_SmallerThanGreaterThan_Flow -->
  <testcase name="TC_Test_timedstate_greatetha0_sensorTag" time="0.001" classname="StreamingEdgeConsole.Test_timedstate_greatetha0_sensorTag">
    <skipped/>
  </testcase> <!-- TC_Test_timedstate_greatetha0_sensorTag -->
  <testcase name="TC_Custom_Over100" time="0.001" classname="StreamingEdgeConsole.Test_Custom_Over_100">
    <skipped/>
  </testcase> <!-- TC_Custom_Over100 -->
  <testcase name="TC_Test_VM_Tiered_Critical_Devicetag_Flow" time="0.0" classname="StreamingEdgeConsole.Test_VM_Tiered_critical_devicetag">
    <skipped/>
  </testcase> <!-- TC_Test_VM_Tiered_Critical_Devicetag_Flow -->
  <testcase name="TC_Test_VM_Tiered_Critical_SensorID_Flow" time="0.001" classname="StreamingEdgeConsole.Test_VM_tieredcritical_sensorID">
    <skipped/>
  </testcase> <!-- TC_Test_VM_Tiered_Critical_SensorID_Flow -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
  <testcase name="@AfterSuite AfterSuite" time="0.0" classname="BaseComponent.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite AfterSuite -->
</testsuite> <!-- Regression -->
